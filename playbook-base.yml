---
- hosts: all
  vars_files:
    - os_vars/{{ ansible_distribution }}.yml
  tasks:
  - name: Install the 'Development tools' package group
    yum:
      name: "@Development tools"
      state: present
    become: yes
    become_user: root
    when: ansible_distribution == "CentOS"

  - name: Install Python extras
    package: name={{item}} state=present
    with_items:
      - python-pip
      - python-virtualenv
      - "{{ python2_dev_package }}"
      - "{{ python3_dev_package }}"
      - ipython
    become: yes
    become_user: root

  - name: Install postgresql
    package: name={{item}} state=present
    with_items:
      - postgresql-contrib
      - "{{ psql_dev_package }}"
      - "{{ psql_lib_package }}"
      - "{{ psql_server_package }}"
    become: yes
    become_user: root

  - name: Initiate database
    command: postgresql-setup initdb
             creates=/var/lib/pgsql/data/postgresql.conf
    become: yes
    become_user: root
    when: ansible_distribution == "CentOS"

  - name: Start PostgreSQL and enable at boot
    service: name=postgresql
             enabled=yes
             state=started
    become: yes
    become_user: root
    when: ansible_distribution == "CentOS"

  - name: Install psycopg2 (for postgresql ansible modules)
    pip:
      name: psycopg2
    become: yes
    become_user: root

  - name: Install RabbitMQ (for Celery)
    package: name={{item}} state=present
    with_items:
      - rabbitmq-server
    become: yes
    become_user: root

  - name: Enable the rabbitmq_management plugin
    rabbitmq_plugin:
      names: rabbitmq_management
      state: enabled
    become: yes
    become_user: root

  - name: Restart RabbitMQ to start management plugin
    service:
      name: rabbitmq-server
      state: restarted
    become: yes
    become_user: root

  - name: Install libjpeg (for Python's Pillow library, required for Django ImageField)
    package: name={{item}} state=present
    with_items:
      - "{{ jpeg_lib_package }}"
      - "{{ zlib_dev_package }}"
    become: yes
    become_user: root

  - name: Create a new database with name "edictweb"
    postgresql_db:
      name: edictweb
    become: true
    become_user: postgres

  - name: Create django postgres user
    postgresql_user:
      db: edictweb
      name: "{{ db_user }}"
      password: "{{ db_password }}"
      priv: ALL
      role_attr_flags: CREATEDB
    become: true
    become_user: postgres
